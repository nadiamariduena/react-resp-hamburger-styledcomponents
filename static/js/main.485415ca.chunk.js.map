{"version":3,"sources":["components/nav/NavbarRight.js","components/nav/Burger.js","components/nav/Navbar.js","components/App.js","index.js"],"names":["Ul","styled","ul","open","RightNav","StyledBurger","div","Burger","useState","setOpen","onClick","NavbarRight","Header","header","Navbar","Fragment","className","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qjDAOA,IAAMA,EAAKC,IAAOC,GAAV,KAoCS,qBAAGC,KAAmB,gBAAkB,sBA+B1CC,EAXE,SAAC,GAAc,IAAZD,EAAW,EAAXA,KAClB,OACE,kBAACH,EAAD,CAAIG,KAAMA,GACR,oCACA,qCACA,oCACA,yC,imCC7DN,IAAME,EAAeJ,IAAOK,IAAV,KA6BM,qBAAGH,KAAmB,OAAS,UASpC,qBAAGA,KAAmB,gBAAkB,eAGxC,qBAAGA,KAAmB,mBAAqB,mBAE7C,qBAAGA,KAAmB,EAAI,KAIxB,qBAAGA,KAAmB,iBAAmB,eAkC7CI,EA5BO,WAAM,MAIFC,oBAAS,GAJP,mBAInBL,EAJmB,KAIbM,EAJa,KAM1B,OACE,oCAEE,kBAACJ,EAAD,CAAcF,KAAMA,EAAMO,QAAS,kBAAMD,GAASN,KAUhD,8BACA,8BACA,+BAEF,kBAACQ,EAAD,CAAaR,KAAMA,M,kTC/EzB,IAAMS,EAASX,IAAOY,OAAV,KAgCGC,EAZA,WACb,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACH,EAAD,KACE,wBAAII,UAAU,QAAd,QACA,6BACE,kBAAC,EAAD,UCbKC,E,uKAbX,OACE,kBAAC,IAAMF,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKC,UAAU,QACb,yBAAKA,UAAU,OACb,gD,GAPME,a,MCElBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.485415ca.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n//\n//\n\n//\nconst Ul = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row nowrap;\n  li {\n    margin-right: 15px;\n  }\n\n  /*------------------------------------------\n\nthis is the second part of this file, from here\non you will adapt the UL content to the mobile\nversion, this means that the ul elements\ninstead of being positioned in INLINE or row\n they will change to a column, for that you\n have to add the media query\n\n\n\n\n\n*/\n\n  @media (max-width: 768px) {\n    flex-flow: column nowrap;\n    width: 100vw;\n    height: 100vh;\n\n    background-color: rgba(255, 255, 0, 0.561);\n    // ---------------\n    // this to position it right on the top and right on the left\n    top: 0;\n    right: 0;\n    position: fixed;\n    // --------------\n    //this comes after you have set up the animation to open and close, NOT BEFORE\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(100%)\")};\n    transition: transform 0.3s ease-in-out;\n    // ---------------\n    // to center it\n    text-align: center;\n    // display: flex;\n    justify-content: space-evenly;\n    // ---------------\n    li {\n      color: #111;\n      font-family: Arial, Helvetica, sans-serif;\n      font-size: 1.8rem;\n      font-weight: 500;\n      &:hover {\n        color: #f0f;\n      }\n    }\n  }\n`;\n\nconst RightNav = ({ open }) => {\n  return (\n    <Ul open={open}>\n      <li>Home</li>\n      <li>About</li>\n      <li>News</li>\n      <li>Contact</li>\n    </Ul>\n  );\n};\n\nexport default RightNav;\n\n/*\n                  1_) \n\n\n you have to copy the ul content and add it \nin this file , you have to leave the header with \nthe logo inside\nthe Navbar file, you can keep the nav also there\n but the Ul\n content have to be here as it s going to be linked\n to the hamburger FILE.\n\n\n the hamburger file will contain the window/toggle \n that\n will open on CLICK , when the window will open\n  it will show the content of the RightNav.js so\n  this file over here:\n\n// THIS IS THE ORIGINAL SET UP before BIG changes\n// to set this up add the 100 vw and vh to reach the whole screen and BG to see it.\n// \n// \nimport React from \"react\";\nimport styled from \"styled-components\";\n\n//\n//\nconst Ul = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row nowrap;\n  li {\n    margin-right: 15px;\n  }\n\n// ----------\n// media query\n// -----------\n\n@media (max-width: 768px) {\n  flex-flow: column nowrap;\n}\n`;\n\n// ----------\n\nconst RightNav = () => {\nreturn (\n  <Ul>\n    <li>Home</li>\n    <li>About</li>\n    <li>News</li>\n    <li>Contact</li>\n  </Ul>\n);\n};\n\nexport default RightNav;\n\n\n*/\n\n/*------------------------------------------\n\n\n                  2_) \n\n                  AFTER ADDING THE FOLLOWING \n                  TO THE STEP 1:\n\n\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n\n\n// ---------------------\nconst Ul = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row nowrap;\n  li {\n    margin-right: 15px;\n  }\n// -------------------\n\n\n  @media (max-width: 768px) {\n    flex-flow: column nowrap;\n    width: 100vw;\n    height: 100vh;\n    // add transparency for production, it helps a lot\n    background-color: rgba(255, 255, 0, 0.561);\n    // ---------------\n    // this to position it right on the top and right on the left\n    top: 0;\n    left: 0;\n    position: fixed;\n    // ---------------\n    // to center it\n    text-align: center;\n    display: flex;\n    justify-content: space-evenly;\n    // ---------------\n    li {\n      color: #111;\n      font-family: Arial, Helvetica, sans-serif;\n      font-size: 1.8rem;\n      font-weight: 500;\n      &:hover {\n        color: #f0f;\n      }\n    }\n  }\n`;\n\n// ------------------------\n\nconst RightNav = () => {\nreturn (\n  <Ul>\n    <li>Home</li>\n    <li>About</li>\n    <li>News</li>\n    <li>Contact</li>\n  </Ul>\n);\n};\n\nexport default RightNav;\n\n\n\n*/\n\n/*------------------------------------------\n\n\n\n\n                  3_)\n\n                  Go to the burger.js and add the \n                  following:\n\n\ntype : rafc to create an arrow function component\n(you have to have the react snippets installed)\n\n------------------------\ndefault\n------------------------\n\n\n\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n//\n//\n\nconst StyledBurger = styled.div``;\n\n//\nexport const Burger = () => {\n  return (\n  <StyledBurger>\n\n\n\n\n\n      \n    </StyledBurger>)\n};\n\n              \n\n\n\n4_) \n\n\n------------------------------\nafter creating the arrow function there and set\nup the step 3, go to the Navbar.js and add the following:\n------------------------------\n\n\nimport Burger from \"./Burger\";\n\nand \n\n <Burger />\n\nlike so: \n\n    <React.Fragment>\n      <Header>\n        <h3 className=\"logo\">LOGO</h3>\n        <nav>\n          <Burger />\n          <NavbarRight />\n        </nav>\n      </Header>\n    </React.Fragment>\n\nIf you dont do that you will not see the styles you are\ngoing to set up in the burger.\n\n\n\n\n\n\n                                                      5_)\n\n\n\n\n\n\n\n------------------------\nadd the styles for the burger appearance\n------------------------\n\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n//\n//\n\n\nconst StyledBurger = styled.div`\n  //   ***  TO SEE the styles *** , IMPORT the burger to the Navbar.js\n  //\n  // the burger position on the page\n  width: 1.5rem; //the size/square of the burger\n  height: 1.5rem;\n  position: fixed;\n  border: 1px solid #000;\n  top: 15px;\n  left: 20px;\n  display: flex;\n  justify-content: space-around;\n  flex-flow: column nowrap;\n  //\n  //\n  //   -----------\n  //   THE LINES styles\n  div {\n    width: 1.5rem;\n    height: 0.2rem;\n    background-color: #333;\n  }\n`;\n\n\n//\nexport const Burger = () => {\n  return (\n    <StyledBurger>\n   \n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  );\n};\n\nexport default Burger;\n\n\n\n\n\n\n\n\n-------------------------------------------------------\n\n\n\n\n                                            6_)\n\n\n\n\n\n\n------------------------\nadd the animation to the burger.js\n------------------------\n\n\n\n\n\nimport React, { useState } from \"react\"; //anim 1_\nimport styled from \"styled-components\";\n//   ***  TO SEE the styles *** , IMPORT the burger to the Navbar.js\n\n//\n//\n\nconst StyledBurger = styled.div`\n  //   ***  TO SEE the styles *** , IMPORT the burger to the Navbar.js\n  //\n  // the burger position on the page\n  width: 1.5rem; //the size/square of the burger\n  height: 1.5rem;\n  position: fixed;\n\n  top: 15px;\n  right: 20px;\n  display: flex;\n  justify-content: space-around;\n  flex-flow: column nowrap;\n  //\n  //\n  //   -----------\n  //   THE LINES styles\n  div {\n    width: 1.5rem;\n    height: 0.2rem;\n    //\n \n    // background-color: #333;\n    background-color: ${({ open }) => (open ? \"#ccc\" : \"#222\")};\n    border-radius: 10px;\n    transform-origin: 1px;\n    transition: all 0.3s linear;\n\n    //this is related to the origin of rotation of the lines\n    //\n    //\n    &:nth-child(1) {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n    &:nth-child(2) {\n      transform: ${({ open }) => (open ? \"translateX(100%)\" : \"translateX(0)\")};\n      //   default is 0 and when opened is 1\n      opacity: ${({ open }) => (open ? 0 : 1)};\n    }\n    &:nth-child(3) {\n      // will rotate on the sense contraire to the (1) one\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n`;\n\n//\nexport const Burger = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    //anim 3_\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  );\n};\n\nexport default Burger;\n\n\n\n\n\n\n\n\n-------------------------------------------------------\n\n\n\n\n\n\n\n                                            7_)\n\n\n\n\n\n\n------------------------\nback to the NavbarRight.js after the animation part\n------------------------\n\n\n\ngo to the Navbar.js and copy the    <NavbarRight />\n\nfrom :\n\n      <nav>\n          <Burger />\n          <NavbarRight />\n        </nav>\n\n\nand paste it inside the Burger.js, and dont forget to take the import from there too:\n\nit should look like this on to:\n\nimport React, { useState } from \"react\"; //anim 1_\nimport styled from \"styled-components\";\nimport NavbarRight from \"./NavbarRight\";\n\nand on the bottom:\n\n\n  return (\n    <>\n   \n      <StyledBurger open={open} onClick={() => setOpen(!open)}>\n        <div />\n        <div />\n        <div />\n      </StyledBurger>\n      <NavbarRight />\n    </>\n  );\n};\n\n-  If you noticed, i added a <> </> fragment stuff because otherwise it \nwill show an error, so you have to wrap it all .\n\n\n\n\n\n\n\n\n\n\n                                            8_)\n\n\n\n\n\n\n------------------------\nNow add the {open } property to the :  <NavbarRight />\nthat you just pasted in the Burger.js\n------------------------\n\n     <NavbarRight open={open} />\n\nAdd the {open} anim settings to the content of the RightNav, so that\nwhen the burger will be clicked the content will show.\n\n \n\n\n\n\n\n\n\n\n\n\n                                            9_)\n\n\n\n\n\n\n------------------------\nafter that, go back to the NavbarRight.js\n------------------------\n\ndelete the   display: none;\n\nthen add the following condition to hide the toggle and to \nopen it under the click function:\n\ntransform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n\ntransition: transform 0.3s ease-in-out;\n\n\n***  To make the toggle work add the following,\n { open } like so:\n\n\nconst RightNav = ({ open }) => {\n  return (\n    <Ul open={open}>\n      <li>Home</li>\n      <li>About</li>\n\n\n\nNow it should work!!  BUT NOW WE NEED to put the hamburger over the\ntoggle to reach it:\n\n\ngo to the Burger.js and add the z-index: 20;\n\n\nlike so :\n\n  justify-content: space-around;\n  flex-flow: column nowrap;\n  //\n  z-index: 20;\n  //\n  //   -----------\n  //   THE LINES styles\n  div {\n\n\n\n\n\n\n\n\n                                            10_)\n\n\n\n\n\n\n------------------------\nTo stop showing the hamburger on the desktop version\n------------------------\n\n\nyou will have to add a similar media query like in this\nfile but to the Burger.js\n\n\n\n\n\n\n\n\n\n\n\n\nBUT IF YOU WANT TO HAVE THE HAMBURGER in desktop as well\nas in the mobile, dont add media queries to the burger.js \nand to the Navbar.js like so:\n\n\n\nconst Ul = styled.ul`\n  list-style: none;\n  display: flex;\n\n  li {\n    margin-right: 15px;\n  }\n\n\n\n  flex-flow: column nowrap;\n  width: 300px;\n  height: 100vh;\n\n  background-color: rgba(255, 255, 0, 0.561);\n  // ---------------\n  // this to position it right on the top and right on the left\n  top: 0;\n  right: 0;\n  position: fixed;\n  // --------------\n  //this comes after you have set up the animation to open and close, NOT BEFORE\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(100%)\")};\n  transition: transform 0.3s ease-in-out;\n  // ---------------\n  // to center it\n  text-align: center;\n  // display: flex;\n  justify-content: space-evenly;\n  // ---------------\n  li {\n    color: #111;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 1.8rem;\n    font-weight: 500;\n    &:hover {\n      color: #f0f;\n    }\n  }\n\n\n  \n`;\n\n\n*/\n","import React, { useState } from \"react\"; //anim 1_\nimport styled from \"styled-components\";\nimport NavbarRight from \"./NavbarRight\";\n//   ***  TO SEE the styles *** , IMPORT the burger to the Navbar.js\n\n//\n//\n\nconst StyledBurger = styled.div`\n  //   ***  TO SEE the styles *** , IMPORT the burger to the Navbar.js\n  //\n  // the burger position on the page\n  width: 1.5rem; //the size/square of the burger\n  height: 1.5rem;\n  position: fixed;\n\n  top: 15px;\n  right: 20px;\n\n  //\n  z-index: 20;\n  display: none;\n  //\n  @media (max-width: 768px) {\n    display: flex;\n    justify-content: space-around;\n    flex-flow: column nowrap;\n  }\n  //\n  //   -----------\n  //   THE LINES styles\n  div {\n    width: 1.5rem;\n    height: 0.2rem;\n    //\n    // anim 4_)\n    // background-color: #333;\n    background-color: ${({ open }) => (open ? \"#ccc\" : \"#222\")};\n    border-radius: 10px;\n    transform-origin: 1px;\n    transition: all 0.3s linear;\n\n    //this is related to the origin of rotation of the lines\n    //\n    //\n    &:nth-child(1) {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n    &:nth-child(2) {\n      transform: ${({ open }) => (open ? \"translateX(100%)\" : \"translateX(0)\")};\n      //   default is 0 and when opened is 1\n      opacity: ${({ open }) => (open ? 0 : 1)};\n    }\n    &:nth-child(3) {\n      // will rotate on the sense contraire to the (1) one\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n`;\n\n//\nexport const Burger = () => {\n  // here you tell that the initial \"state\" is open:\n  // const [state, setState] = useState(initialState);\n  //     const [open, setOpen] = useState(false);\n  const [open, setOpen] = useState(false); //anim 2_\n\n  return (\n    <>\n      {/* // //anim 3_ */}\n      <StyledBurger open={open} onClick={() => setOpen(!open)}>\n        {/* \n        \n        what this does: get the false value of the open\n        and transform it to  TRUE and if open is true/opened \n        transform it to FALSE\n        \n        \n        */}\n        {/* the burger lines */}\n        <div />\n        <div />\n        <div />\n      </StyledBurger>\n      <NavbarRight open={open} />\n    </>\n  );\n};\n\nexport default Burger;\n\n/*\n\n                                            -----------\n                                            ANIM \n                                            -----------\n\n                        correspond to the animation steps\n\n        1) REPLACE THE :\n\n            import React from \"react\"; \n\n        by \n\n        import React, { useState } from \"react\"; \n\n\n        Using the  { useState } will allow us to create\n        the animation by setting up the state and the setState \n        , the state is the default state of the element we want to\n        handle in this case the burger lines, and the setState is the \n        changed state of this element \"changed when clicked\" as it will\n        change the default initial state.\n\n\n\n\n        2_) declare it, here you chose how it will be called,\n            since we have to open it to see the content i will call it \"open\":\n\n\n              const [open, setOpen] = useState(false); \n\n        - If you notice the initial/default is : open\n        - and the change state of the default will be: setOpen\n        - useState is the hook state(which is : FALSE)\n\n\n\n\n        3)_ Add the hook \"usestate\" to the element you want to change\n        \"the lines parent box\" :\n\n\n\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n   \n        \n        what this does: get the false or default value of the open\n        and transform it to  TRUE, and if open is true or opened \n        transform it to FALSE/close\n        \n    \n   \n      <div />\n      <div />\n      <div />\n\n\n    </StyledBurger>\n\n\n\n        4_ ) ONCE THIS IS DONE, add the {open} to the 3 lines :\n\n\n\n\n    //this is related to the origin of rotation of the lines\n    //\n    //\n    &:nth-child(1) {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n    &:nth-child(2) {\n      transform: ${({ open }) => (open ? \"translateX(100%)\" : \"translateX(0)\")};\n      //   default is 0 and when opened is 1\n      opacity: ${({ open }) => (open ? 0 : 1)};\n    }\n    &:nth-child(3) {\n      // will rotate on the sense contraire to the (1) one\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n\n\n      - this line is going to be send away in an x axe when clicked for then\n      the line 1 and the line 3 will form the x shape.\n\n       &:nth-child(2) {\n      transform: ${({ open }) => (open ? \"translateX(100%)\" : \"translateX(0)\")};\n      //   default is 0 and when opened is 1\n      opacity: ${({ open }) => (open ? 0 : 1)};\n    }\n\n\n\n    ******\n\n   ITS NOT GOING TO WORK YET as you have to add the following:\n\n  \n\n        // this is just the lines changing color when clicked\n    background-color: ${({ open }) => (open ? \"#ccc\" : \"#222\")};\n\n\n    ---------\n    transform-origin: 1px;  //this will make the X shape crossing possible\n\n    ------------\n    // \n    // without the linear transition, the line in the middle will not move\n    transition: all 0.3s linear;\n\n\n\n\n\n\n\n*/\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Burger from \"./Burger\";\n\n//\nconst Header = styled.header`\n  width: 100%;\n  min-height: 3vh;\n  border-bottom: 1px solid #000;\n  padding: 15px 0;\n  // position: fixed;\n  display: flex;\n  justify-content: space-around;\n  //\n  background: #fff;\n  .logo {\n    letter-spacing: 15px;\n  }\n`;\n\n/*\n\n\n\n*/\nconst Navbar = () => {\n  return (\n    <React.Fragment>\n      <Header>\n        <h3 className=\"logo\">LOGO</h3>\n        <nav>\n          <Burger />\n        </nav>\n      </Header>\n    </React.Fragment>\n  );\n};\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport Navbar from \"./nav/Navbar\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"page\">\n          <div className=\"app\">\n            <h1>hello app</h1>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}